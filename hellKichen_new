#!/bin/bash
set -e
USER_HOME=$(eval echo ~${SUDO_USER})
FILE=""
NOW=$(date +"%d%m%Y_%H%M%S");
pdi=""
log=""

function init(){
	USER_HOME=$(eval echo ~${SUDO_USER})
	echo "User PATH: "${USER_HOME}/.kettle/hellkichen.properties
	if [ ! -f ${USER_HOME}/.kettle/hellkichen.properties ]; then
		touch ${USER_HOME}/.kettle/hellkichen.properties;
		echo "kettle_path =" >> ${USER_HOME}/.kettle/hellkichen.properties;
		echo "kettle_log = " >> ${USER_HOME}/.kettle/hellkichen.properties;
	fi
	echo ${USER_HOME}/.kettle/hellkichen.properties
	FILE=${USER_HOME}/.kettle/hellkichen.properties;
	
}

function setParameterAndLog(){
 	 pdi=$(grep -i 'kettle_path' $FILE  | cut -f2 -d'=')
 	 log=$(grep -i 'kettle_log' $FILE  | cut -f2 -d'=')
}

function run(){

	local load_file=${1}
	local log_level=${2:-'Debug'}
	local parameters=${3:-''}

	if [[ ${load_file} =~ \.kjb$ ]]; then
			./kitchen.sh -file=${load_file} -level=${log_level} > ${load_file}_$NOW.log
			echo "command run  a job : .$FILE/kitchen.sh -file=$1 $3 -level=$2 > $1_$NOW.log"
	else
			./pan.sh -file=${load_file} -level=${log_level} > $log$logname
			echo "command run a transformation: .$FILE/pin.sh -file=$1 -level=$2 > $1_$NOW.log"
	fi

	case  $?  in

	    0) echo  "-> The job ran without a problem." >> $logname ;;
	    1) echo  "-> Errors occurred during processing." >> $logname ;;
	    2) echo  "-> An unexpected error occurred during loading / running of the job." >> $logname ;;
	    7) echo  "-> The job couldn't be loaded from XML or the Repositorn." >> $logname ;;
	    8) echo  "-> Error loading steps or plugins (error in loading one of the plugins mostly)." >> $logname ;;
	    9) echo  "-> Command line usage printing." >> $logname ;;

	esac 
}

init;
setParameterAndLog;

if [! -f ${LOAD_FILE} ];

	echo -e "\033[31m Error!!!! the ETL process don't exist please check the path"
else
	run ${LOAD_FILE} ${LOG_LEVEL}
	getPid;
fi
